const text: string = "A *model* in surfaceview3 comprises a collection of surfaces and 3D vector fields that live in the same 3D space.\n\nTo add a model to this workspace, run a Python script on the computer running the backend service.\n\nAn example for loading some vector fields from a Python .pickle file:\n\n```python\nimport surfaceview3\nimport kachery_client as kc\n\n# Set workspace_uri\nworkspace_uri = '{workspaceUri}'\n\n################################################################\n# Set pkl_fname\n# This example is specific to the CCM setup\ndatadir = '/mnt/ceph/users/mrachh/miniwasp_data'\n\n# model_name = 'iref0_iomega1_icase2_idir1_ipol1'\n# model_name = 'iref1_iomega2_icase2_idir1_ipol1'\n# model_name = 'iref1_iomega2_icase2_idir1_ipol2'\n# model_name = 'iref1_iomega3_icase2_idir1_ipol1'\n# model_name = 'iref1_iomega3_icase2_idir1_ipol2'\n# model_name = 'iref1_iomega4_icase2_idir1_ipol1'\n# model_name = 'iref1_iomega4_icase2_idir1_ipol2'\n# model_name = 'iref1_iomega2_icase2_idir1_ipol1_idis0'\n# model_name = 'iref1_iomega2_icase2_idir1_ipol1_idis1'\nmodel_name = 'iref1_iomega2_icase2_idir1_ipol1_idis2'\n\npkl_fname = f'{datadir}/pickle_{model_name}.pickle'\nx = kc.load_pkl(pkl_fname)\nif not x:\n    raise Exception(f'Problem loading: {pkl_fname}')\n################################################################\n\nxgrid = x['xgrid']\nygrid = x['ygrid']\nzgrid = x['zgrid']\nH = x['H'].reshape((3, len(xgrid), len(ygrid), len(zgrid)), order='C')\nE = x['E'].reshape((3, len(xgrid), len(ygrid), len(zgrid)), order='C')\neccentricity_E =x['eccentricity_E'].reshape((1, len(xgrid), len(ygrid), len(zgrid)), order='C')\nintensity_E = x['intensity_E'].reshape((1, len(xgrid), len(ygrid), len(zgrid)), order='C')\n\nH0 = surfaceview3.VectorField3D.from_numpy(xgrid=xgrid, ygrid=ygrid, zgrid=zgrid, values=H)\nE0 = surfaceview3.VectorField3D.from_numpy(xgrid=xgrid, ygrid=ygrid, zgrid=zgrid, values=E)\neccentricity_E0 = surfaceview3.VectorField3D.from_numpy(xgrid=xgrid, ygrid=ygrid, zgrid=zgrid, values=eccentricity_E)\nintensity_E0 = surfaceview3.VectorField3D.from_numpy(xgrid=xgrid, ygrid=ygrid, zgrid=zgrid, values=intensity_E)\n\nM = surfaceview3.Model(model_name)\nM.add_vector_field_3d('H', H0)\nM.add_vector_field_3d('E', E0)\nM.add_vector_field_3d('eccentricity_E', eccentricity_E0)\nM.add_vector_field_3d('intensity_E', intensity_E0)\n\n# Load the workspace and add the model\nW = surfaceview3.load_workspace(workspace_uri)\nW.add_model(M)\n```\n\nAn example for loading a surface, which requires access to a .vtk file in unstructured grid format:\n\n```python\nimport surfaceview3\n\n# Define the new model\nM = surfaceview3.Model('model1')\ns = surfaceview3.Surface.from_vtk_unstructured_grid('sha1://c5860c1d68f08635baac933bfa63160138a9097a/surf.vtk')\nM.add_surface('surface1', s)\n\n# Load the workspace and add the model\nW = surfaceview3.load_workspace('{workspaceUri}')\nW.add_model(M)\n```\n\nHere is an example script that assumes you have a URI for the serialized model:\n\n```python\nimport surfaceview3\n\n# Load the model to be added\nM = surfaceview3.Model.deserialize('sha1://..../model.json', label='model1')\n\n# Load the workspace and add the model\nW = surfaceview3.load_workspace('{workspaceUri}')\nW.add_model(M)\n```\n\nIn the context of the miniwasp project, you can generate a URI for a new model by running one of the [examples found here](https://github.com/magland/surfaceview3/tree/main/devel/miniwasp_examples). That will print a model URI to the console and you can use the above script to add the model to the workspace."

export default text